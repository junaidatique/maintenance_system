= simple_form_for(@flying_log) do |f|
  = f.error_notification
  - if @flying_log.errors.full_messages.count > 0
    .alert.alert-danger
      ul
        - @flying_log.errors.full_messages.each do |error_message|
          li
            = error_message
  == render 'show_flying_log'  
  - if (can? :release_flight, FlyingLog and @flying_log.servicing_completed? and @flying_log.flightline_release.created_at.blank?)
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Flightline Release
          .box-body
            = f.simple_fields_for :flightline_release do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                
  - if can? :view_logs, FlyingLog
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Aircraft History
          .box-body
            .row
              .col-md-12
                .box.box-info
                  .box-body
                    table.table.table-bordered.table-striped.data-tabled
                      thead
                        tr
                          th width='10%'
                            | Pilot                          
                          th width='10%'
                            | Date
                          th width='10%'
                            | Description
                          th width='10%'
                            | Authorisation Code                          
                          th width='10%'
                            | Action Taken                          
                          th width='13%'
                            | Detail
                      tbody                        
                        - @flying_log.aircraft.flying_logs.completed.order(number: :desc).each do |flying_log|
                          - if flying_log.flightline_servicing.inspection_performed_cd != 2
                            - if flying_log.techlogs.pilot_created.count > 0
                              - flying_log.techlogs.pilot_created.each do |techlog|
                                tr
                                  td.table-row-center
                                    = techlog.user.name
                                  td.table-row-center
                                    = display_date(techlog.log_date) 
                                  td.table-row-center
                                    = techlog.description
                                  td.table-row-center
                                    = techlog.autherization_code.autherization_code_format if techlog.autherization_code.present?
                                  td.table-row-center
                                    = techlog.action                            
                                      
                                  td.text-center width='20%'
                                    = link_to pdf_techlog_path(techlog, format: :pdf), class: 'btn btn-success btn-flat', target: :_blank do
                                      i.fa.fa-file-pdf-o 

                            - else
                              tr
                                td
                                  - if flying_log.capt_acceptance_certificate.present? and flying_log.capt_acceptance_certificate.user.present?
                                    = flying_log.capt_acceptance_certificate.user.name                            
                                td.table-row-center
                                  = display_date(flying_log.log_date) 
                                td.table-row-center
                                  - if flying_log.sortie.present?
                                    = flying_log.sortie.pilot_comment_cd
                                td.table-row-center
                                td.table-row-center                                                                  
                                td.text-center width='20%'
                                  = link_to pdf_flying_log_path(flying_log, format: :pdf), class: 'btn btn-success btn-flat', target: :_blank do
                                    i.fa.fa-file-pdf-o                                                            
                                
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Limitations
          .box-body
            .row
              .col-md-12
                .box.box-info
                  .box-body
                    table.table.table-bordered.table-striped.data-tabled
                      thead
                        tr
                          th width='10%'
                            | Number
                          th width='10%'
                            | Date
                          th width='10%'
                            | Description
                          th width='10%'
                            | Authorisation Code
                          th width='10%'
                            | Action Taken                          
                          th width='13%'
                            | Detail
                      tbody
                        - @flying_log.aircraft.techlogs.limited.order(number: :desc).each do |techlog|
                          tr
                            td.table-row-center
                              = link_to techlog.serial_no, techlog_path(techlog)
                            td.table-row-center
                              = display_date(techlog.log_date) 
                            td.table-row-center
                              = techlog.description
                            td.table-row-center
                              = techlog.autherization_code.autherization_code_format if techlog.autherization_code.present?
                            td.table-row-center
                              = techlog.action                            
                                
                            td.text-center width='20%'
                              = link_to pdf_techlog_path(techlog, format: :pdf), class: 'btn btn-success btn-flat', target: :_blank do
                                i.fa.fa-file-pdf-o                                                            
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Deffered
          .box-body
            .row
              .col-md-12
                .box.box-info
                  .box-body
                    table.table.table-bordered.table-striped.data-tabled
                      thead
                        tr              
                          th width='10%'
                            | Techlog
                          th width='10%'
                            | Date                          
                          th width='10%'
                            | Description
                          th width='10%'
                            | Authorisation Code                          
                          th width='13%'
                            | Actions
                      tbody
                        - @flying_log.aircraft.techlogs.addled.order(number: :desc).each do |techlog|
                          tr
                            td.table-row-center
                              = link_to techlog.serial_no, techlog_path(techlog)
                            td.table-row-center
                              = display_date(techlog.log_date)                             
                            td.table-row-center
                              = techlog.description
                            td.table-row-center
                              = techlog.autherization_code.autherization_code_format if techlog.autherization_code.present?
                            td.text-center width='20%'
                              = link_to pdf_addl_log_path(techlog, format: :pdf), class: 'btn btn-success btn-flat', target: :_blank do
                                i.fa.fa-file-pdf-o
                              = link_to addl_log_path(techlog), class: 'btn btn-success btn-flat ', target: :_blank do
                                i.fa.fa-eye                                                            
                                
    
    
  - if can? :bookout_flight, FlyingLog and @flying_log.flight_released?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Pilot Acceptance Certificate
          .box-body
            = f.simple_fields_for :ac_configuration do |ac_f|
              .row
                .col-md-4
                  = ac_f.input :cockpit, collection: enum_option_pairs(AcConfiguration, :cockpit), as: :radio_buttons 
            = f.simple_fields_for :capt_acceptance_certificate do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                /- if @flying_log.ac_configuration.cockpit_cd == 2
                .col-sm-6
                  = ac_f.association :second_pilot, collection: User.pilots.ne(_id: current_user._id).all, label_method: :name, include_blank: false, value_method: :id, label: 'Crew', input_html: {class: 'custom-select2'}
                  br
                  br                  
                .col-sm-6
                  - if @flying_log.ac_configuration.third_seat
                    = ac_f.input :third_seat_name

              .row
                .col-md-6
                  = f.input :location_from
                .col-md-6
                  = f.input :location_to                
              
              .row
                .col-sm-6
                  = ac_f.input :mission, collection: enum_option_pairs(CaptAcceptanceCertificate, :mission)
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
              .row
                .col-sm-6
                  = ac_f.input :view_history, label: 'I have reviwed Aircraft History', as: :boolean, checked_value: 1, unchecked_value: 0
                .col-sm-6
                  = ac_f.input :view_deffered_log, label: 'I have reviwed Aircraft Deffered Log', as: :boolean, checked_value: 1, unchecked_value: 0
              
            
  - if can? :bookin_flight, FlyingLog and @flying_log.flight_booked?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Sortie
          .box-body
            = f.simple_fields_for :sortie do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              
              .row
                .col-sm-12
                  h5
                    | Times
              .row
                .col-sm-6
                  = ac_f.input :takeoff_time, label: 'Takeoff Time (Local)', input_html: { class: 'timepickerclass' }
                .col-sm-6
                  = ac_f.input :landing_time, label: 'Landing Time (Local)', input_html: { class: 'timepickerclass' }                  
              .row
                .col-sm-12
                  h5
                    | Landings
              .row
                .col-sm-6
                  = ac_f.input :touch_go
                .col-sm-6
                  = ac_f.input :full_stop
              .row
                .col-sm-6
                  = ac_f.input :pilot_comment, collection: enum_option_pairs(Sortie, :pilot_comment), as: :radio_buttons
                .col-sm-6
                  = ac_f.input :mission_cancelled, label: 'Mission Cancelled', as: :boolean, checked_value: 1, unchecked_value: 0 
                
    .row
      .col-md-12.hide#div_techlog_servicing
        .box.box-info
          .box-header.with-border
            .row
              .col-sm-9
                h3.box-title
                  i.fa.fa-bar-chart
                  | &nbsp; Discrepancies
              .col-sm-3
                
          .box-body
            div.techlogs
              = f.simple_fields_for :techlogs do |techlog|
                = render 'techlog_fields', :f => techlog
            .row
              .col-sm-offset-9.col-sm-3
                = link_to_add_association "+ Add Discrepancy", f, :techlogs, data: {:'association-insertion-node' => ".techlogs", :'association-insertion-method' => 'append'}, class: 'btn btn-block btn-primary btn-flat'
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Post Mission Report
          .box-body
            = f.simple_fields_for :post_mission_report do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }             
              = ac_f.input :aircraft_id, as: :hidden, input_html: { value: @flying_log.aircraft.id }             
              .row
                .col-sm-6
                  = ac_f.input :oat, label: 'OAT (C°)'
                .col-sm-6
                  = ac_f.input :idle_rpm, label: 'IDLE RPM'
              .row
                .col-sm-6
                  = ac_f.input :max_rpm, label: 'MAX RPM'
                .col-sm-6
                  = ac_f.input :cht, label: 'CHT (F°)'
              .row
                .col-sm-6
                  = ac_f.input :oil_temp, label: 'Oil Temp (F°)'
                .col-sm-6
                  = ac_f.input :oil_pressure, label: 'Oil Pressure (PSI)'
              .row
                .col-sm-6
                  = ac_f.input :map, label: 'MAP (MMHg)'
                .col-sm-6
                  = ac_f.input :mission_date, label: 'Date', readonly: true, input_html: { value: cur_date() }
              .row
                .col-sm-6
                  = ac_f.input :mag_drop_left, label: 'MAG DROP LT'
                .col-sm-6
                  = ac_f.input :mag_drop_right, label: 'MAG DROP RT'
              .row
                .col-sm-12
                  = ac_f.input :remarks, as: :text
  - if can? :bookin_flight, FlyingLog and @flying_log.pilot_commented?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Capt After Flight
          .box-body
            = f.simple_fields_for :capt_after_flight do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                .col-sm-6
                  

  - if can? :update_work_unit_code, FlyingLog and @flying_log.pilot_confirmed?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-border
            .row
              .col-sm-6
                h3.box-title
                  i.fa.fa-bars
                  | &nbsp; Techlogs
              .col-sm-6.text-right
                
          .box-body
            .row
              .col-sm-12
                table.table.table-bordered.table-striped.data-tabled
                  thead
                    tr
                      th width='10%'
                        | Number
                      th width='10%'
                        | Viewed
                      th width='10%'
                        | Aircraft
                      th width='10%'
                        | Description
                      th width='10%'
                        | Authorisation Code
                      th width='10%'
                        | Completed
                      th width='13%'
                        | Actions
                  tbody
                    - @flying_log.techlogs.incomplete.each do |techlog|
                      tr
                        td.table-row-center
                          = link_to techlog.serial_no, techlog_path(techlog), target: :_blank
                        td.table-row-center
                          = (techlog.is_viewed) ? 'Yes' : 'No'
                        td.table-row-center
                          = techlog.aircraft.tail_number
                        td.table-row-center
                          = techlog.description
                        td.table-row-center
                          = techlog.autherization_code.autherization_code_format if techlog.autherization_code.present?
                        td.table-row-center
                          = techlog.is_completed? ? 'Yes' : 'No'
                        td.text-center width='20%'
                          = link_to edit_techlog_path(techlog), class: 'btn btn-info btn-flat', target: :_blank do
                            i.fa.fa-pencil
                          = link_to pdf_techlog_path(techlog, format: :pdf), class: 'btn btn-success btn-flat', target: :_blank do
                            i.fa.fa-file-pdf-o
  - if can? :update_sortie, FlyingLog and @flying_log.pilot_confirmed?      
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Sortie
          .box-body
            = f.simple_fields_for :sortie do |ac_f|              
              .row
                .col-sm-6
                  = ac_f.input :sortie_code, collection: enum_option_pairs(Sortie, :sortie_code_unsat), as: :radio_buttons    
    
     
  - if can? :update_flying_hours, FlyingLog and @flying_log.log_completed?      
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Sortie
          .box-body
            = f.simple_fields_for :sortie do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              
              .row
                .col-sm-12
                  h5
                    | Times
              .row
                .col-sm-6
                  = ac_f.input :takeoff_time, label: 'Takeoff Time (Local)', input_html: { class: 'timepickerclass' }
                .col-sm-6
                  = ac_f.input :landing_time, label: 'Landing Time (Local)', input_html: { class: 'timepickerclass' }                  
              .row
                .col-sm-12
                  h5
                    | Landings
              .row
                .col-sm-6
                  = ac_f.input :touch_go
                .col-sm-6
                  = ac_f.input :full_stop            
              .row
                .col-sm-6
                  = ac_f.input :sortie_code, collection: enum_option_pairs(Sortie, :sortie_code), as: :radio_buttons    
    
     
            
    /- if @flying_log.flightline_servicing.inspection_performed_cd == 2
      .row
        .col-md-12
          .box.box-info
            .box-header.with-borderf
              h3.box-title
                i.fa.fa-bars
                | &nbsp; After Flight Servicing
            .box-body
              = f.simple_fields_for :after_flight_servicing do |ac_f|
                = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
                .row
                  .col-sm-6
                    = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                  .col-sm-6
                    
                .row
                  .col-sm-6                    
                  .col-sm-6
                    = ac_f.input :oil_refill
                
  == render 'common/form_action_buttons', options: { form: f, index_path: flying_logs_path}
