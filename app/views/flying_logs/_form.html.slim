= simple_form_for(@flying_log, html: { class: '' }) do |f|
  = f.error_notification
  == render 'show_flying_log'
    
  - if current_user.role == :master_control and @flying_log.fuel_filled?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Flightline Release
          .box-body
            = f.simple_fields_for :flightline_release do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                /.col-sm-6
                  = ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, input_html: {class: 'custom-select2'}
  - if current_user.role == :pilot and @flying_log.flight_released?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Pilot Acceptance Certificate
          .box-body
            = f.simple_fields_for :capt_acceptance_certificate do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                /.col-sm-6
                  = ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, input_html: {class: 'custom-select2'}
  - if current_user.role == :pilot and @flying_log.flight_booked?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Sortie
          .box-body
            = f.simple_fields_for :sortie do |ac_f|
              .row
                .col-sm-6
                  = ac_f.association :user, collection: User.pilots.all, label_method: :name, value_method: :id, label: 'Crew', input_html: {class: 'custom-select2'}
                .col-sm-6
              .row
                .col-sm-12
                  h5
                    | Times
              .row
                .col-sm-4
                  = ac_f.input :takeoff_time, label: 'Takeoff Time (Local)', input_html: { class: 'timepickerclass' }
                .col-sm-4
                  = ac_f.input :landing_time, label: 'Landing Time (Local)', input_html: { class: 'timepickerclass' }
                .col-sm-4
                  = ac_f.input :flight_time, label: 'Flight Time (mins)'
              .row
                .col-sm-6
                  = ac_f.input :sortie_code, collection: enum_option_pairs(Sortie, :sortie_code), as: :radio_buttons 
              .row
                .col-sm-12
                  h5
                    | Landings
              .row
                .col-sm-4
                  = ac_f.input :touch_go
                .col-sm-4
                  = ac_f.input :full_stop
                .col-sm-4
                  = ac_f.input :total
              .row
                .col-sm-12
                  = ac_f.input :remarks, as: :text
              .row
                .col-sm-12
                  .form-group
                    = ac_f.label :pilot_feedback
                    - if ac_f.object.pilot_feedback.attachment.exists?
                      = image_tag ac_f.object.pilot_feedback.attachment.url(:small), class: 'media-object'
                    = ac_f.fields_for :pilot_feedback, ac_f.object.pilot_feedback do |pilot_feedback|
                      = pilot_feedback.file_field :attachment
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Capt After Flight
          .box-body
            = f.simple_fields_for :capt_after_flight do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                .col-sm-6
                  /= ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, input_html: {class: 'custom-select2'}
  - if current_user.role == :master_control and @flying_log.pilot_commented?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Aircraft Total Times
          .box-body
            = f.simple_fields_for :aircraft_total_time do |ac_f|
              .row
                .col-sm-12
                  h5
                    | Carried Over Totals
              .row
                .col-sm-3
                  = ac_f.input :carried_over_engine_hours
                .col-sm-3
                  = ac_f.input :carried_over_aircraft_hours
                .col-sm-3
                  = ac_f.input :carried_over_landings
                .col-sm-3
                  = ac_f.input :carried_over_prop_hours
              .row
                .col-sm-12
                  h5
                    | This Sortie
              .row
                .col-sm-3
                  = ac_f.input :this_sortie_engine_hours
                .col-sm-3
                  = ac_f.input :this_sortie_aircraft_hours
                .col-sm-3
                  = ac_f.input :this_sortie_landings
                .col-sm-3
                  = ac_f.input :this_sortie_prop_hours
              .row
                .col-sm-12
                  h5
                    | New Total
              .row
                .col-sm-3
                  = ac_f.input :new_total_engine_hours
                .col-sm-3
                  = ac_f.input :new_total_aircraft_hours
                .col-sm-3
                  = ac_f.input :new_total_landings
                .col-sm-3
                  = ac_f.input :new_total_prop_hours
              .row
                .col-sm-12
                  h5
                    | Correction
              .row
                .col-sm-3
                  = ac_f.input :correction_engine_hours
                .col-sm-3
                  = ac_f.input :correction_aircraft_hours
                .col-sm-3
                  = ac_f.input :correction_landings
                .col-sm-3
                  = ac_f.input :correction_prop_hours
              .row
                .col-sm-12
                  h5
                    | Corrected Total
              .row
                .col-sm-3
                  = ac_f.input :corrected_total_engine_hours
                .col-sm-3
                  = ac_f.input :corrected_total_aircraft_hours
                .col-sm-3
                  = ac_f.input :corrected_total_landings
                .col-sm-3
                  = ac_f.input :corrected_total_prop_hours
    .row
      .col-md-12#div_techlog_servicing
        .box.box-info
          .box-header.with-border
            .row
              .col-sm-9
                h3.box-title
                  i.fa.fa-bar-chart
                  | &nbsp; Techlog
              .col-sm-3
                
          .box-body
            div.techlogs
              = f.simple_fields_for :techlogs do |techlog|
                = render 'techlog_fields', :f => techlog
            .row
              .col-sm-offset-9.col-sm-3
                = link_to_add_association "+ Add Techlog", f, :techlogs, data: {:'association-insertion-node' => ".techlogs", :'association-insertion-method' => 'append'}, class: 'btn btn-block btn-primary btn-flat'
    - if @flying_log.flightline_servicing.inspection_performed_cd == 2
      .row
        .col-md-12
          .box.box-info
            .box-header.with-borderf
              h3.box-title
                i.fa.fa-bars
                | &nbsp; After Flight Servicing
            .box-body
              = f.simple_fields_for :after_flight_servicing do |ac_f|
                = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
                .row
                  .col-sm-6
                    = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                  .col-sm-6
                    /= ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, input_html: {class: 'custom-select2'}
                .row
                  .col-sm-6
                    /= ac_f.input :through_flight, as: :boolean, checked_value: 1, unchecked_value: 0
                  .col-sm-6
                    = ac_f.input :oil_refill
                
  == render 'common/form_action_buttons', options: { form: f, index_path: flying_logs_path}
