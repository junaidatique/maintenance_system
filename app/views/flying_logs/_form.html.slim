= simple_form_for(@flying_log) do |f|
  = f.error_notification
  - if @flying_log.errors.full_messages.count > 0
    .alert.alert-danger
      ul
        - @flying_log.errors.full_messages.each do |error_message|
          li
            = error_message
  == render 'show_flying_log'
    
  - if current_user.role == :master_control and @flying_log.fuel_filled?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Flightline Release
          .box-body
            = f.simple_fields_for :flightline_release do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                /.col-sm-6
                  = ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, input_html: {class: 'custom-select2'}
  - if current_user.role == :pilot and @flying_log.flight_released?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Pilot Acceptance Certificate
          .box-body
            = f.simple_fields_for :capt_acceptance_certificate do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-4
                  = ac_f.input :mission, collection: enum_option_pairs(CaptAcceptanceCertificate, :mission)
                .col-sm-4
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                .col-sm-4
                  = ac_f.input :view_history, label: 'I have reviwed Aircraft History', as: :boolean, checked_value: 1, unchecked_value: 0
                /.col-sm-6
                  = ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, input_html: {class: 'custom-select2'}
  - if current_user.role == :pilot and @flying_log.flight_booked?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Sortie
          .box-body
            = f.simple_fields_for :sortie do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                - if @flying_log.ac_configuration.cockpit_cd == 2
                  .col-sm-6
                    = ac_f.association :second_pilot, collection: User.pilots.ne(_id: current_user._id).all, label_method: :name, include_blank: false, value_method: :id, label: 'Crew', input_html: {class: 'custom-select2'}
                .col-sm-6
                  - if @flying_log.ac_configuration.third_seat
                    = ac_f.input :third_seat_name
              .row
                .col-sm-12
                  h5
                    | Times
              .row
                .col-sm-6
                  = ac_f.input :takeoff_time, label: 'Takeoff Time (Local)', input_html: { class: 'timepickerclass' }
                .col-sm-6
                  = ac_f.input :landing_time, label: 'Landing Time (Local)', input_html: { class: 'timepickerclass' }
                
              .row
                .col-sm-6
                  = ac_f.input :pilot_comment, collection: enum_option_pairs(Sortie, :pilot_comment), as: :radio_buttons 
              .row
                .col-sm-12
                  h5
                    | Landings
              .row
                .col-sm-6
                  = ac_f.input :touch_go
                .col-sm-6
                  = ac_f.input :full_stop
                
    .row
      .col-md-12#div_techlog_servicing
        .box.box-info
          .box-header.with-border
            .row
              .col-sm-9
                h3.box-title
                  i.fa.fa-bar-chart
                  | &nbsp; Discrepancies
              .col-sm-3
                
          .box-body
            div.techlogs
              = f.simple_fields_for :techlogs do |techlog|
                = render 'techlog_fields', :f => techlog
            .row
              .col-sm-offset-9.col-sm-3
                = link_to_add_association "+ Add Discrepancy", f, :techlogs, data: {:'association-insertion-node' => ".techlogs", :'association-insertion-method' => 'append'}, class: 'btn btn-block btn-primary btn-flat'  
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Capt After Flight
          .box-body
            = f.simple_fields_for :capt_after_flight do |ac_f|
              = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
              .row
                .col-sm-6
                  = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                .col-sm-6
                  
  
  - if (current_user.role == :master_control or current_user.role == :engineer or current_user.role == :admin) and @flying_log.pilot_commented?
    .row
      .col-md-12
        .box.box-info
          .box-header.with-borderf
            h3.box-title
              i.fa.fa-bars
              | &nbsp; Sortie
          .box-body
            = f.simple_fields_for :sortie do |ac_f|
              .row
                .col-sm-6
                  = ac_f.input :sortie_code, collection: enum_option_pairs(Sortie, :sortie_code), as: :radio_buttons    
    .row
      .col-md-12#div_techlog_servicing
        .box.box-info
          .box-header.with-border
            .row
              .col-sm-9
                h3.box-title
                  i.fa.fa-bar-chart
                  | &nbsp; Discrepancies
              .col-sm-3
                
          .box-body
            div.techlogs
              - i = 0
              = f.simple_fields_for :techlogs do |techlog|                
                - i += 1
                = render 'techlog_fields', f: techlog, i: i
            .row
              .col-sm-offset-9.col-sm-3
                = link_to_add_association "+ Add Discrepancy", f, :techlogs, data: {:'association-insertion-node' => ".techlogs", :'association-insertion-method' => 'append'}, class: 'btn btn-block btn-primary btn-flat'  
    - if @flying_log.flightline_servicing.inspection_performed_cd == 2
      .row
        .col-md-12
          .box.box-info
            .box-header.with-borderf
              h3.box-title
                i.fa.fa-bars
                | &nbsp; After Flight Servicing
            .box-body
              = f.simple_fields_for :after_flight_servicing do |ac_f|
                = ac_f.input :user_id, as: :hidden, input_html: { value: current_user.id }
                .row
                  .col-sm-6
                    = ac_f.input :flight_time, label: 'Time (Local)', readonly: true, input_html: { value: cur_time() }
                  .col-sm-6
                    
                .row
                  .col-sm-6                    
                  .col-sm-6
                    = ac_f.input :oil_refill
                
  == render 'common/form_action_buttons', options: { form: f, index_path: flying_logs_path}
