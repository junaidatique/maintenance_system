wb = xlsx_package.workbook
Aircraft.all.each do |aircraft|

  wb.styles do |s|
    heading = s.add_style sz: 20, b: true, alignment: { horizontal: :center, vertical: :center, wrap_text: true}
    sub_heading = s.add_style sz: 14, b: true, alignment: { horizontal: :center, vertical: :center, wrap_text: true}
    ins_heading = s.add_style sz: 12, alignment: { horizontal: :center, vertical: :center, wrap_text: true}
    wb.add_worksheet(name: aircraft.tail_number) do |sheet|
      

      sheet.add_row ["","",""] #1
      sheet.merge_cells("A1:C1")
      sheet.add_row ["Daily Flying Report of #{aircraft.tail_number}","",""], style: heading #2
      sheet.merge_cells("A2:C2")
      sheet.add_row ["","",""] #3
      sheet.merge_cells("A3:C3")
      if aircraft.flying_logs.where(log_date: Time.zone.now.strftime("%Y-%m-%d")).count > 0
      #if aircraft.flying_logs.count > 0
        aircraft.flying_logs.where(log_date: Time.zone.now.strftime("%Y-%m-%d")).each do |flying_log|
        #aircraft.flying_logs.limit(1).each do |flying_log|
          mission = flying_log.capt_acceptance_certificate.present? ? flying_log.capt_acceptance_certificate.mission : ""
          sheet.add_row ["Log Date","Aircraft","Log Number"] #4
          sheet.add_row [flying_log.log_date,flying_log.aircraft.tail_number,flying_log.serial_no] #5
          sheet.add_row ["Location From","Location To","Mission"] #6
          sheet.add_row [flying_log.location_from,flying_log.location_to,mission] #7
          sheet.add_row ["A/C Configuration","",""], style: sub_heading #8
          # sheet.merge_cells("A8:C8")      

          clean = (flying_log.ac_configuration.clean) ? 'Yes' : 'No'
          third_seat = (flying_log.ac_configuration.third_seat) ? 'Yes' : 'No'
          smoke_pods = (flying_log.ac_configuration.smoke_pods) ? 'Yes' : 'No'

          sheet.add_row ["Clean","Third Seat","Smoke Pods"] #9          
          sheet.add_row [clean,third_seat,smoke_pods] #10
          
          third_seat = (flying_log.ac_configuration.smoke_pods?) ? flying_log.ac_configuration.smoke_oil_quantity : ''
          smoke_pods = (flying_log.ac_configuration.cockpit.present?) ? flying_log.ac_configuration.cockpit : ''

          sheet.add_row ["Smoke Oil Quantity (gal)","Cockpit",""] #11
          sheet.add_row [third_seat,smoke_pods,""] #12      

          sheet.add_row ["Flightline Servicing","",""], style: sub_heading #13
          # sheet.merge_cells("A13:C13")
          sheet.add_row ["","",""] #14
          sheet.add_row ["Inspection Performed & Status","Inspection Start Time","Inspection End Time"] #15
          
          sheet.add_row [flying_log.show_text_status,str_date_time(flying_log.flightline_servicing.flight_start_time),str_date_time(flying_log.flightline_servicing.flight_end_time)] #16
          
          sheet.add_row ["Pilot Acceptance Certificate","",""], style: sub_heading #17
          # sheet.merge_cells("A17:C17")      
          pilot = (flying_log.capt_after_flight.present? and flying_log.capt_after_flight.user.present?) ? flying_log.capt_after_flight.user.name : ""
          crew = ""
          if flying_log.ac_configuration.cockpit_cd == 2 and flying_log.capt_acceptance_certificate.second_pilot.present?
            crew = flying_log.capt_acceptance_certificate.second_pilot.name
          end

          if flying_log.ac_configuration.third_seat and flying_log.capt_acceptance_certificate.third_seat_name.present?
            third_seat_name = flying_log.capt_acceptance_certificate.third_seat_name
          end
          sheet.add_row ["Pilot","Crew","Third Seat"] #18
          sheet.add_row [pilot,crew,third_seat_name] #19
          if flying_log.sortie.present?
            sheet.add_row ["Sortie","",""], style: sub_heading #20
            # sheet.merge_cells("A20:C20")      
            sheet.add_row ["Takeoff Time","Landing Time","Flight Time"] #21
            sheet.add_row [flying_log.sortie.takeoff_time,flying_log.sortie.landing_time,flying_log.sortie.flight_time] #22
            sheet.add_row ["Touch &amp; go","Full Stop","Landings"] #23
            sheet.add_row [flying_log.sortie.touch_go,flying_log.sortie.full_stop,flying_log.sortie.total_landings] #24
            sheet.add_row ["Sortie Code","",""] #25
            sheet.add_row [flying_log.sortie.sortie_code,"",""] #26
          end
        end
      else
        sheet.add_row ["No Flying Today","",""], style: sub_heading #8              
      end
      flying_log_time = aircraft.flying_logs.last.aircraft_total_time
      sheet.add_row ["Hours","",""], style: sub_heading #27
      # sheet.merge_cells("A27:C27")
      sheet.add_row ["Aircraft Hours","Engine Hours","Prop Hours"] #28
      sheet.add_row [flying_log_time.corrected_total_aircraft_hours,flying_log_time.corrected_total_engine_hours,flying_log_time.corrected_total_prop_hours] #29
      sheet.add_row ["Parts","",""], style: sub_heading #30
      # sheet.merge_cells("A30:C30")

      engine = aircraft.part_items.engines.first
      propeller = aircraft.part_items.propellers.first      
      left_tyre = aircraft.part_items.left_tyres.first      
      right_tyre = aircraft.part_items.right_tyres.first      
      nose_tail = aircraft.part_items.nose_tails.first      

      sheet.add_row ["Total Landings","Engine Sr #","Prop Sr #"] #31
      sheet.add_row [flying_log_time.corrected_total_landings,engine.serial_no,propeller.serial_no] #32
      sheet.add_row ["Left Tyre Sr #","Right Tyre Sr #","Nose Wheel Sr #"] #33
      sheet.add_row [left_tyre.serial_no.to_s, right_tyre.serial_no.to_s, nose_tail.serial_no.to_s] #34
      sheet.add_row ["Left Tyre landings","Right Tyre landings","Nose Tail landings"] #35
      sheet.add_row [left_tyre.landings_completed,right_tyre.landings_completed,nose_tail.landings_completed] #36
      sheet.add_row ["Inspections","",""], style: sub_heading #37
      # # sheet.merge_cells("A37:C37")      

      Inspection.aircrafts.each do |inspection|
        completed_insp = inspection.scheduled_inspections.where(inspectable_id: aircraft.id).completed.last
        inspection_completed = (completed_insp.present?) ? (display_date(completed_insp.inspection_completed)) : ""
        completed_hours = (completed_insp.present?) ? (completed_insp.completed_hours) : ""
        sheet.add_row ["#{inspection.name} C/Out Date","","#{inspection.name} C/Out Hrs"]
        sheet.add_row [inspection_completed,"",completed_hours]

        due_sch_insp = inspection.scheduled_inspections.where(inspectable_id: aircraft.id).not_completed.order(created_at: :desc).last
        inspection_completed = (due_sch_insp.present? and due_sch_insp.calender_life_date.present?) ? (display_date(due_sch_insp.calender_life_date)) : ""
        completed_hours = (due_sch_insp.present?) ? (due_sch_insp.hours) : ""
        sheet.add_row ["#{inspection.name} Due Date","","#{inspection.name} Due Hrs"]
        sheet.add_row [inspection_completed,"",completed_hours]
      end
      battery_part = aircraft.part_items.battery.first       
      if battery_part.present?        
        completed_insp = battery_part.scheduled_inspections.order(created_at: :desc).limit(2)
        inspection_completed = (completed_insp.present?) ? (display_date(completed_insp.inspection_completed)) : ""
        completed_hours = (completed_insp.present?) ? (completed_insp.completed_hours) : ""
        sheet.add_row ["#{completed_insp.inspection.name} C/Out Date","","#{completed_insp.inspection.name} C/Out Hrs"]
        sheet.add_row [inspection_completed,"",completed_hours]

        due_sch_insp = inspection.scheduled_inspections.where(inspectable_id: aircraft.id).not_completed.order(created_at: :desc).last
        inspection_completed = (due_sch_insp.present? and due_sch_insp.calender_life_date.present?) ? (display_date(due_sch_insp.calender_life_date)) : ""
        completed_hours = (due_sch_insp.present?) ? (due_sch_insp.hours) : ""
        sheet.add_row ["#{inspection.name} Due Date","","#{inspection.name} Due Hrs"]
        sheet.add_row [inspection_completed,"",completed_hours]
      end
      if aircraft.techlogs.addled.count > 0
        sheet.add_row ["ADDLs","",""], style: sub_heading #70    
        aircraft.techlogs.addled.each do |addl|    
          sheet.add_row ["Auth Code","","Description"] #71
          sheet.add_row [addl.autherization_code.autherization_code_format,"",addl.description] #72
        end
      end
      if aircraft.techlogs.limited.count > 0
        sheet.add_row ["Limitation Logs","",""], style: sub_heading #73        
        aircraft.techlogs.limited.each do |limition|    
          sheet.add_row ["Auth Code","","Description"] #71
          sheet.add_row [limition.autherization_code.autherization_code_format,"",limition.description] #72
        end
      end
      
    end
  end
end