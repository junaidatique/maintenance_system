wb = xlsx_package.workbook
Aircraft.all.each do |aircraft|

  wb.styles do |s|
    heading = s.add_style sz: 12, b: true, alignment: { horizontal: :center, vertical: :center, wrap_text: true}
    sub_heading = s.add_style sz: 10, b: true, alignment: { horizontal: :center, vertical: :center, wrap_text: true}
    ins_heading = s.add_style sz: 9, alignment: { horizontal: :center, vertical: :center, wrap_text: true}
    wb.add_worksheet(name: aircraft.tail_number) do |sheet|                  
      sheet.add_row ["Daily Flying Report of #{aircraft.tail_number}",""], style: heading #2
      sheet.merge_cells("A1:B1")                  
      if aircraft.flying_logs.where(log_date: Time.zone.now.strftime("%Y-%m-%d")).count > 0
      #if aircraft.flying_logs.count > 0
        aircraft.flying_logs.where(log_date: Time.zone.now.strftime("%Y-%m-%d")).each do |flying_log|
        #aircraft.flying_logs.limit(1).each do |flying_log|
          mission = flying_log.capt_acceptance_certificate.present? ? flying_log.capt_acceptance_certificate.mission : ""
          sheet.add_row ["Log Date",flying_log.log_date] #4
          sheet.add_row ["Aircraft",flying_log.aircraft.tail_number] #4          
          # sheet.add_row ["Log Number",flying_log.serial_no] #5
          sheet.add_row ["Location From",flying_log.location_from] #6
          sheet.add_row ["Location To",flying_log.location_to] #6
          sheet.add_row ["Mission", mission] #6
          
          sheet.add_row ["A/C Configuration",""], style: sub_heading #8          

          clean = (flying_log.ac_configuration.clean) ? 'Yes' : 'No'
          third_seat = (flying_log.ac_configuration.third_seat) ? 'Yes' : 'No'
          smoke_pods = (flying_log.ac_configuration.smoke_pods) ? 'Yes' : 'No'

          sheet.add_row ["Clean",clean] #9          
          sheet.add_row ["Third Seat",third_seat] #9          
          sheet.add_row ["Smoke Pods", smoke_pods] #9                    
          
          smoke_pods = (flying_log.ac_configuration.smoke_pods?) ? flying_log.ac_configuration.smoke_oil_quantity : ''
          cockpit = (flying_log.ac_configuration.cockpit.present?) ? flying_log.ac_configuration.cockpit : ''

          sheet.add_row ["Smoke Oil Quantity (gal)",smoke_pods] #11
          sheet.add_row ["Cockpit", cockpit] #11          

          sheet.add_row ["Flightline Servicing",""], style: sub_heading #13          
          
          sheet.add_row ["Inspection Performed & Status", flying_log.show_text_status] #15
          sheet.add_row ["Inspection Start Time", str_date_time(flying_log.flightline_servicing.flight_start_time)] #15
          sheet.add_row ["Inspection End Time", str_date_time(flying_log.flightline_servicing.flight_end_time)] #15
                    
          sheet.add_row ["Pilot Acceptance Certificate",""], style: sub_heading #17          
          pilot = (flying_log.capt_after_flight.present? and flying_log.capt_after_flight.user.present?) ? flying_log.capt_after_flight.user.name : ""
          crew = ""
          if flying_log.ac_configuration.cockpit_cd == 2 and flying_log.capt_acceptance_certificate.second_pilot.present?
            crew = flying_log.capt_acceptance_certificate.second_pilot.name
          end

          if flying_log.ac_configuration.third_seat and flying_log.capt_acceptance_certificate.third_seat_name.present?
            third_seat_name = flying_log.capt_acceptance_certificate.third_seat_name
          end
          sheet.add_row ["Pilot", pilot] #18
          sheet.add_row ["Crew",crew] #18
          sheet.add_row ["Third Seat", third_seat_name] #18
          
          if flying_log.sortie.present?
            sheet.add_row ["Sortie",""], style: sub_heading #20            
            sheet.add_row ["Takeoff Time", flying_log.sortie.takeoff_time] #21
            sheet.add_row ["Landing Time",flying_log.sortie.landing_time] #21
            sheet.add_row ["Flight Time", flying_log.sortie.flight_time] #21

            sheet.add_row ["Touch &amp; go",flying_log.sortie.touch_go] #23
            sheet.add_row ["Full Stop",flying_log.sortie.full_stop] #23
            sheet.add_row ["Landings", flying_log.sortie.total_landings] #23
            
            sheet.add_row ["Sortie Code",flying_log.sortie.sortie_code] #25            
          end
        end
      else
        sheet.add_row ["No Flying Today",""], style: sub_heading #8              
      end
      flying_log_time = aircraft.flying_logs.last.aircraft_total_time
      sheet.add_row ["Hours",""], style: sub_heading #27      
      sheet.add_row ["Aircraft Hours",flying_log_time.corrected_total_aircraft_hours] #28
      sheet.add_row ["Engine Hours",flying_log_time.corrected_total_engine_hours] #28
      sheet.add_row ["Prop Hours", flying_log_time.corrected_total_prop_hours] #28
      
      sheet.add_row ["Parts",""], style: sub_heading #30      

      engine = aircraft.part_items.engines.first
      propeller = aircraft.part_items.propellers.first      
      left_tyre = aircraft.part_items.left_tyres.first      
      right_tyre = aircraft.part_items.right_tyres.first      
      nose_tail = aircraft.part_items.nose_tails.first      

      sheet.add_row ["Total Landings",flying_log_time.corrected_total_landings] #31
      sheet.add_row ["Engine Sr #",engine.serial_no] #31
      sheet.add_row ["Prop Sr #", propeller.serial_no] #31

      sheet.add_row ["Left Tyre Sr #",left_tyre.serial_no.to_s] #33
      sheet.add_row ["Right Tyre Sr #",right_tyre.serial_no.to_s] #33
      sheet.add_row ["Nose Wheel Sr #", nose_tail.serial_no.to_s] #33
      
      sheet.add_row ["Left Tyre landings",left_tyre.landings_completed] #35
      sheet.add_row ["Right Tyre landings",right_tyre.landings_completed] #35
      sheet.add_row ["Nose Tail landings", nose_tail.landings_completed] #35      
      sheet.add_row ["Inspections",""], style: sub_heading #37
      

      Inspection.aircrafts.each do |inspection|
        completed_insp = inspection.scheduled_inspections.where(inspectable_id: aircraft.id).completed.last
        inspection_completed = (completed_insp.present?) ? (display_date(completed_insp.inspection_completed)) : ""
        completed_hours = (completed_insp.present?) ? (completed_insp.completed_hours) : ""
        sheet.add_row ["#{inspection.name} C/Out Date",inspection_completed]
        sheet.add_row ["#{inspection.name} C/Out Hrs",completed_hours]

        due_sch_insp = inspection.scheduled_inspections.where(inspectable_id: aircraft.id).not_completed.order(created_at: :desc).last
        inspection_completed = (due_sch_insp.present? and due_sch_insp.calender_life_date.present?) ? (display_date(due_sch_insp.calender_life_date)) : ""
        completed_hours = (due_sch_insp.present?) ? (due_sch_insp.hours) : ""
        sheet.add_row ["#{inspection.name} Due Date",inspection_completed]
        sheet.add_row ["#{inspection.name} Due Hrs",completed_hours]
      end
      battery_pt = aircraft.part_items.battery_part.first       
      if battery_pt.present?        
        completed_insp = battery_pt.scheduled_inspections.order(created_at: :desc).completed.first
        inspection_completed = (completed_insp.present?) ? (display_date(completed_insp.inspection_completed)) : ""
        completed_hours = (completed_insp.present?) ? (completed_insp.completed_hours) : ""
        sheet.add_row ["#{completed_insp.inspection.name} C/Out Date",inspection_completed]
        sheet.add_row ["#{completed_insp.inspection.name} C/Out Hrs",completed_hours]

        due_sch_insp = battery_pt.scheduled_inspections.not_completed.first
        inspection_completed = (due_sch_insp.present? and due_sch_insp.calender_life_date.present?) ? (display_date(due_sch_insp.calender_life_date)) : ""
        completed_hours = (due_sch_insp.present?) ? (due_sch_insp.hours) : ""
        sheet.add_row ["#{completed_insp.inspection.name} Due Date",inspection_completed]
        sheet.add_row ["#{completed_insp.inspection.name} Due Hrs",completed_hours]
      end
      if aircraft.techlogs.addled.count > 0
        sheet.add_row ["ADDLs",""], style: sub_heading #70    
        aircraft.techlogs.addled.each do |addl|    
          sheet.add_row ["Auth Code","Description"] #71
          sheet.add_row [addl.autherization_code.autherization_code_format,addl.description] #72
        end
      end
      if aircraft.techlogs.limited.count > 0
        sheet.add_row ["Limitation Logs",""], style: sub_heading #73        
        aircraft.techlogs.limited.each do |limition|    
          sheet.add_row ["Auth Code","Description"] #71
          sheet.add_row [limition.autherization_code.autherization_code_format,limition.description] #72
        end
      end
      
    end
  end
end