.nested-fields  
  .row
    .col-md-12
      / = f.input :old_part_id, as: :hidden
      /= f.input :new_part_id, as: :hidden
      - if current_user.autherization_codes.include? @techlog.autherization_code and f.object.requested_by.blank?
        = f.input :requested_by_id, as: :hidden, input_html: { value: current_user.id }
      - if current_user.role == :logistics
        = f.input :assigned_by_id, as: :hidden, input_html: { value: current_user.id }
      .row          
        .col-sm-2
          - if current_user.autherization_codes.include? @techlog.autherization_code and f.object.part_number.blank? and !f.object.provided
            /= f.input :part_number, :url => autocomplete_parts_path(aircraft_id: @techlog.aircraft_id.to_s, search_type: :include), :as => :autocomplete, input_html: {id_element: "#id"}
            = f.input :part_id, collection: Part.all.map{ |part| ["#{part.number} - #{part.noun}", part.id] }, input_html: {class: 'custom-select2'}
          - else
            label Part # 
            br
            = "#{f.object.part.number} - #{f.object.part.noun}"
            
        .col-sm-2
          - if current_user.autherization_codes.include? @techlog.autherization_code and !f.object.provided
            = f.input :quantity_required  
          - else             
            label Quantity Requested
            br
            = f.object.quantity_required
        .col-sm-2
          - if current_user.autherization_codes.include? @techlog.autherization_code and !f.object.provided
            = f.input :is_servicable, as: :radio_buttons
          - else             
            label Serviceable
            br
            = (f.object.is_servicable) ? 'Yes' : 'No'
        .col-sm-2
          - if f.object.old_part.blank? and current_user.logistics? and !f.object.provided
            - old_parts = f.object.part.part_items.where(aircraft_id: @techlog.aircraft_id)
            = f.input :old_part_id, collection: old_parts.map{ |l| [l.serial_no, l.id] }, include_blank: false, label: 'Old Serail #'
          - elsif f.object.old_part.present?
            label Old Serial #
            br
            = f.object.old_part.serial_no            
        .col-sm-2
          - if current_user.logistics? and !f.object.provided
            - if f.object.part.is_serialized?
              - part_serials = f.object.part.part_items.serviceables.any_of({aircraft_id: nil})                                      
              = f.input :new_part_id, collection: part_serials.map{ |l| [l.serial_no, l.id] }, include_blank: false, label: 'New Serail #'
          - elsif f.object.new_part.present?
            label New Serial #
            br
            = f.object.new_part.serial_no            
        /.col-sm-2
            - if current_user.role == :logistics and !f.object.provided
              = f.input :quantity_provided  
            - elsif f.object.new_part.present?             
              label Quantity Provided
              br
              = f.object.quantity_provided
        .col-sm-2
          - if current_user.role == :logistics and !f.object.provided
            = f.input :provided, label: 'provided', as: :boolean, checked_value: 1, unchecked_value: 0 
            /, class: 'part_available[]'
          / - elsif @techlog.parts_provided?            
          /   label Available
          /   br
          /   = (f.object.available) ? 'Yes' : 'No'
        .col-sm-1
          - if current_user.autherization_codes.include? @techlog.autherization_code and !f.object.provided
            br
            = link_to_remove_association f, class: 'btn btn-block btn-danger btn-flat' do
              i.fa.fa-trash
      hr
        