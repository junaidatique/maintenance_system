= simple_form_for(@techlog, html: { novalidate: true }) do |f|
  = f.error_notification
  - if @techlog.errors.full_messages.count > 0
    .alert.alert-danger
      ul
        - @techlog.errors.full_messages.each do |error_message|
          li
            = error_message
  == render 'techlog_basic_show'
  - if !@techlog.flying_log.blank? and  current_user.role == :crew_cheif and @techlog.flying_log.flightline_serviced?
    = f.simple_fields_for :flying_log do |ac_f|
      .row
        .col-md-12
          .box.box-info
            .box-header.with-borderf
              h3.box-title
                i.fa.fa-bars
                | &nbsp; Fuel
            .box-body
              .row
                .col-sm-6
                  = ac_f.input :fuel_refill, as: :float, label: "Refill (Gallons): Total Capacity #{@techlog.flying_log.aircraft.fuel_capacity} (Gallons)", input_html: { max: @techlog.flying_log.aircraft.fuel_capacity, required: true, min: 0 }
              .row
                .col-sm-12
                  h5
                    | Oil
              .row
                .col-sm-6
                  = ac_f.input :oil_serviced, as: :float, label: "Serviced (Gallons) : Total Capacity #{@techlog.flying_log.aircraft.oil_capacity} (Gallons)", input_html: { max: @techlog.flying_log.aircraft.oil_capacity, required: true, min: 0 }

  .row
    .col-md-12
      .box.box-info
        .box-header.with-borderf
          h3.box-title
            i.fa.fa-bars
            | &nbsp; General
        .box-body
          .row
            .col-sm-12
              = f.input :action, as: :text
  .row
    .col-md-12#div_part_change
      .box.box-info
        .box-header.with-border
          .row
            .col-sm-9
              h3.box-title
                i.fa.fa-bar-chart
                | &nbsp; Parts Changed
            .col-sm-3
              
        .box-body
          div.change_parts
            = f.simple_fields_for :change_parts do |change_part|
              = render 'change_part_fields', :f => change_part
          .row
            .col-sm-offset-9.col-sm-3
              = link_to_add_association "+ Add Changed Part", f, :change_parts, data: {:'association-insertion-node' => ".change_parts", :'association-insertion-method' => 'append'}, class: 'btn btn-block btn-primary btn-flat'
  
  .row
    .col-md-12
      .box.box-info
        .box-header.with-borderf
          h3.box-title
            i.fa.fa-bars
            | &nbsp; Additional
        .box-body
          .row
            .col-sm-6
              = f.input :additional_detail_form, as: :boolean, checked_value: 1, unchecked_value: 0
            .col-sm-6
              = f.input :component_on_hold, as: :boolean, checked_value: 1, unchecked_value: 0
          .row
            .col-sm-6
              = f.input :sap_notif
            .col-sm-6
              = f.input :sap_wo
          .row
            .col-sm-6
              = f.input :amr_no
            .col-sm-6
              = f.input :occurrence_report
          .row
            .col-sm-12
              = f.input :tools_used, as: :text
  
  .row
    .col-md-12
      .box.box-info
        .box-header.with-borderf
          h3.box-title
            i.fa.fa-bars
            | &nbsp; Work
        .box-body
          .row
            .col-sm-6
              = f.input :dms_version, readonly: true
          .row
            .col-sm-12
              h5
                | Work Performed
          = f.simple_fields_for :work_performed do |ac_f|
            .row
              .col-sm-4
                = ac_f.input :work_date, input_html: { class: 'date_class' }
              .col-sm-4
                = ac_f.input :work_time, input_html: { class: 'timepickerclass' }
              .col-sm-4
                = ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, label: 'Personal Code', input_html: {class: 'custom-select2'}
          .row
            .col-sm-12
              h5
                | Work Inspected
          = f.simple_fields_for :date_inspected do |ac_f|
            .row
              .col-sm-4
                = ac_f.input :work_date, input_html: { class: 'date_class' }
              .col-sm-4
                = ac_f.input :work_time, input_html: { class: 'timepickerclass' }
              .col-sm-4
                = ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, label: 'Personal Code', input_html: {class: 'custom-select2'}
          .row
            .col-sm-12
              h5
                | Work Duplicate
          = f.simple_fields_for :work_duplicate do |ac_f|
            .row
              .col-sm-4
                = ac_f.input :work_date, input_html: { class: 'date_class' }
              .col-sm-4
                = ac_f.input :work_time, input_html: { class: 'timepickerclass' }
              .col-sm-4
                = ac_f.association :user, collection: User.all, label_method: :name, value_method: :id, include_blank: false, label: 'Personal Code', input_html: {class: 'custom-select2'}
            

              
              
  == render 'common/form_action_buttons', options: { form: f, index_path: locations_path}
javascript:
  $(document).ready(function() {

    
    $(".js-search-category-multiple-select").select2({
      theme: 'bootstrap',
      ajax: {
        url: "/work_unit_codes/get_work_unit_codes",
        dataType: 'json',
        type: 'GET',
        delay: 250,
        data: function (params) {
          return {
            q: params.term,
            page: params.page
          };
        },
        processResults: function (data, params) {
          params.page = params.page || 1;
          return {
            results: data.items,
            pagination: {
              more: (params.page * 30) < data.total_count
            }
          };
        }
      },
      minimumInputLength: 1,
      escapeMarkup: function (markup) { return markup; },
      templateResult: formatwuc, // let our custom formatter work
      templateSelection: formatwucSelection
    
    })

    function formatwuc(wuc) {
      if (wuc.loading) return "Loading...";
      var markup = "<div class='select2-result-wuc clearfix'>"  
      return wuc.code;
    }
    function formatwucSelection (wuc) {
      return wuc.code || wuc.text;
    }

  })